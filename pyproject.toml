[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.git
  | \.venv
  | build
  | dist
  | __pycache__
  | node_modules
  | temp
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip = [".venv", "build", "dist", "node_modules", "spotidal-api"]
known_first_party = ["spotidal", "syncer", "gemini_playlist_suggester", "sonos_server", "api", "models", "services", "config", "core"]

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".venv", "node_modules", "temp", "test-screenshots", "syncer_v2", "spotidal-api"]

[tool.mypy]
python_version = "3.8"
# Start with lenient settings for gradual adoption
warn_return_any = false  # Too many violations initially
warn_unused_configs = true
ignore_missing_imports = true
no_implicit_optional = false  # Many violations of this
check_untyped_defs = false  # Start without checking untyped functions
disallow_untyped_defs = false  # Don't require type annotations yet
disallow_any_generics = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = false  # Enable later
# Exclude paths with issues
exclude = [
    '^build/',
    '^dist/',
    '^\.venv/',
    '^temp/',
    '^test-screenshots/',
    '^node_modules/',
    '^syncer_v2/',  # Legacy code with many issues
    '^tidalapi/',
    '^tidal_dl/',
    '^spotidal-api/',  # Separate API project
    '^monitoring/',  # Invalid package name and test conflicts
    '^code-history-tool/',  # Duplicate module names
    '^gemini_playlist_suggester/test-suite/',  # Duplicate module names
    '^soco_integration_tests/tests/',  # Duplicate conftest.py
    '^tests/',  # Duplicate conftest.py
    '^gemini_playlist_suggester/tests/',  # Potential conflicts
    '^sonos_server/tests/',  # Potential conflicts
    '^syncer/tests/',  # Potential conflicts
    # Exclude test files initially
    '^.*/test_.*\.py$',
    '^.*/tests/.*\.py$',
]

[tool.ruff]
# Ruff configuration for modern Python linting
target-version = "py38"
line-length = 120
extend-exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    "env",
    ".env",
    "node_modules",
    "temp",
    "test-screenshots",
    "syncer_v2",
    "tidalapi",
    "tidal_dl",
    "spotidal-api",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache"
]

[tool.ruff.lint]
# Enable comprehensive rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]

# Ignore rules that conflict with black or are too aggressive initially
ignore = [
    "E501",   # Line too long (handled by black/formatter)
    "E203",   # Whitespace before ':' (conflicts with Black)
    "B008",   # Do not perform function calls in argument defaults
    "B904",   # Use `raise ... from err` within except clauses
    "UP007",  # Use `X | Y` for type annotations (Python 3.8 compatibility)
    "SIM102", # Use a single if-statement (can reduce readability)
    "SIM108", # Use ternary operator (can reduce readability)
]

# Allow auto-fixes for safe rules
fixable = ["E", "W", "F", "I", "B", "C4", "SIM"]
unfixable = []

[tool.ruff.per-file-ignores]
# Test files can have additional flexibility
"test_*.py" = ["F841"]  # Unused variables in tests
"*_test.py" = ["F841"]
"tests/*.py" = ["F841"]

[tool.ruff.format]
# Ruff formatter configuration (compatible with black)
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.bandit]
exclude_dirs = ["tests", "test", "temp", "build", "dist", "syncer_v2", "test-screenshots", "node_modules", "venv", "tidalapi", "tidal_dl", "spotidal-api"]
# Skip specific checks:
# B101: Test for use of assert (common in tests)
# B104: Binding to 0.0.0.0 needed for Docker containers
# B314: XML parsing needed for SMAPI service (TODO: switch to defusedxml)
# B324: MD5 used for cache keys, not security
# B601-B603: subprocess usage needed for Docker operations
# B608: SQL construction with parameterized queries (false positives)
skips = ["B101", "B104", "B314", "B324", "B601", "B602", "B603", "B608"]
